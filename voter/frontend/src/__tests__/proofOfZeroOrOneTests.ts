import {Cipher} from "../ballot/encryptedBallot";
import {BigNumberHelper} from "../helper/bigNumberHelper";
import bigInt from "big-integer";
import {ProofOfZeroOrOne} from "../cryptography/proofOfZeroOrOne";

describe("ProofOfZeroOrOne test", () => {
    const p: bigInt.BigInteger = BigNumberHelper.fromHexString("ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff");
    const g: bigInt.BigInteger = BigNumberHelper.fromHexString("2");
    const publicKey: bigInt.BigInteger = BigNumberHelper.fromHexString("505a3e9a453ca5177325acfab3fb1e5e4c6090c7395e995856b599dd6197509873dee31a57eb667a287ea650d4acdd65c15775268134f8e0897aeee3df83e57e27d7d84be71a25e441d4ebcad39684869a4c19abe62fd05c549dbf7de7f2a920addbb4bb4143badc29fe71f0724aa1f6a2550324e16bc70fbcbdfc8eb0bce28273fc615ba907e521ad8d8ae57cc4f54d2f84f31e15bc4be53095604b6403febcffd4b79453da2d4aee8f7685728f5472fa33484acb878be6cfe450c7ae44bf600dd8d611d2ce79ae14f040661a8b43e2fd5791e47a9452e0565bf9e3d027df97bf7e3209422014196170252ee55bf349d2230754537ddde0bbd8f446159c3cf6");

    it("should classify proof as valid", () => {
        // arrange
        const cipher: Cipher = {
            c: BigNumberHelper.fromHexString("2b66853b6009043222870f2dda9a3d8ae3ecfc9aa5dd8199180f2659495bb2b57f44d8568f4e53df457e6bc1f38922ab52203b7bda92fe1ddf2f08cf4e5f9f4f1b8507dc1da57f6b374eca2cd2e392c6823387b5d4a4ffbe3a9617331a42c3a1bddcae63baee2e533ce5d506ca2a45407cd5bc6561cb7a45332e1695538f05a4503aab7c7f11a510bc59c0f926b12ceadeb6318f4f057eb2dc760aefb3744e48283d286238cce139b7b76d111225f070906c49ce86c557b76a75bd6ec4e9e6ccca49ddb034dac936b94940237795cd03c91cba15fe09221268ee1bdc0b18476018533f88afe6a3a5ca6846b32b4f2e77fa484567c261420a6e44d506ece0340f"),
            d: BigNumberHelper.fromHexString("cfd824346e446c6e738da939ef1dd6beac4ffa3538a2b0b8631d093c356aceed5b89310fb8484630de04a6fdf0feeb990d5eab0f450a195206f9d042dfa59bd84603b6ddb844fd52461f64f7691236db2f3bec7270b0859706323bd0fbde68563ab92c124127398cf3e596b1a6de4fb04a8347ebe5e9df7e875a1275f9ed1031557b7b5b02f6f3708f4012fd36338a9c6538222a27df6d722f30976f7c3e6590ca058ebc68ca9cee25dd8f38bae394e36eecc7393cdfbdbb8f39349a62e0b22647274139f7a0020aa0bc74e65989059a02f233eb0269eb2e8c4224be6b5e2cf61989b59ab4d9da833b5c22b9df18169f084406fcee44ae85b70b14e2cf163c76")
        }

        const proof: ProofOfZeroOrOne = new ProofOfZeroOrOne(
            "410a63b20ee76a27ffb5d2829b47be20ef6986d07b3e4c6e48fc90440835ad69337dd9e5ca060597e5db65301a1ec9c5c9737190d0c8f1daa1b3919f4d9a49a5335c2f834a9c84ecd400d77a4556386c25d54e8ad5cf019997d481612a4c2eb077fbee23b2a6820693225adfee46f4a92b422ce37300c7ea6eb6d6030bd4586d4a3aeaf1f32fc0a58ced7310e7caf40f8f776f6b8b2684da0a9a85586b9917dd94c5a3ad250fc45d2dbb185bc020706867799ddaa1f5a874761e95035dedacd72de337f80881a233f65a1f1b2ebf2e5ae27232d28b0f816a0e5b49de335ab11c0eb88b5b6930d1dc930ae4f704e432f2b61bc7961e3fe9a5acc0cbe40280d744",
            "e68b581b4d37561636fd3c9ed5201c264ee32ccfbe07f881e09a4a4fd808f1c02a02dbfa98ae9252e3ac62e402fa3fa52ddec1fcf63c6ee2edc587c1a8bb1b7160b5df27e316fc53110278e5b628665057de6f84d54a47918d28d95489fee19cb89540b34b7ecaefa298c554820a8415be6840d13d28625551cc64b7b79f75bd1c5653476046ae3bbe3158bf097ca50af3c5c79017b717d75fe0dcc312aedf50cec7ff72d3e19e332de21fc24861055576483f431e7988c58f0e2adadbbdde7ca7d2425afe62c3187f694f8b799499a160cf28bc1738b45117d112dd59a7666f309ba98b4c6adf765233e18ca1fa29db2ca6a1e8b6714ffa84e069047bafbcf0",
            "a68bc3287242764b621619e681ed3df81eb7c85c1846d4e3327c4cec1963a3ca0dac8abd7df1d50c03ef495ccd26161e9196640220b0a91ce9e5dde3362becce1abde6a6c892a9ebbceb72e41b91efe7c9aff0c115b2e629ec0e7ff7c62d8b672d7dbfea1ee6d2952489de31b8e5827051d405cc10cca8bcaeb6e27d116df56d64c66f500c0a4c5d5b706d7ca10921058309748c7416f7c49235c84c03702c7db2895bbaccde88aad7e75702814b896b5f31cd302ca3262c1b6ec8204aface1ef696b508b3812cfc7f057c925c8c231165eec0fe1cd155fbf9e6c7c20818a45ff40a862c4674239438f3b08a2725ef81e213ec6b7779d96bf7bbab445fd1492e",
            "1f4121ff1eb29c1e6234e6f4767d3bfdcf6f0093bf453443eb6e6b07c3079fd7e479f7d8253457db25f6870b6573b1283f340ac7940cc2a3b12bf4075a69fb878cc4f2abb4ecb6b1442f405958047f76e6a58033aa6ada9fb39b92ffd1232e1d7a39b76cc965574f9bc754c93f75e3677cfbbe79fcffb4e363df1ed8c6c1dc922180654d214f354894325a82866ad64a9d4515fa091706db51a01228692522d51f24c6ffe6a7de9d3106e54eff780704219b5479f89af4d1d0304f082321501304410f13a1f8ac8241744ec0542ae64b97c352a0cf3877f655ab9226f821d355ae5b49666519ea610abbfb710498a4944d92433bbf5824de9c7877bfce172808",
            "80f14231ea91959377a0505ce0c76e3a8559c8ed50d04cfcd8952fadf81f9f36",
            "bee6fb7",
            "772a6bd50d25b876536a64d1a5f637618f9a8b7eaa35b14afe8018f02b4b41b7705f2a20",
            "f3300415"
        );

        // act
        const isValid: boolean = proof.verify(cipher.c, cipher.d, publicKey, p, g);

        // assert
        expect(isValid).toStrictEqual(true);
    });

    it("should classify proof as invalid", () => {
        const cipher: Cipher = {
            c: BigNumberHelper.fromHexString("60e3195acac31d9ee9e189a2c8bf1bc4ac6c967b9cf1f1164c95bef23a0d69db520c564d44630ce5f3fe24c895f431602c6ebb305d7280585c85b7efdabd95dda9f0ce08bee2d9fe09b3f022a6ee4c0fa9f02840a859cce9998d5a04d8a5dc67e6fbb712aa5d70e4f20574ebfb2bff41effeb09ff2b684ea87d7660223e435982807e77c559b6ce2eb84a305ac54787b5831a8ab4e4c8205559490a574cbdeec762f6b8126119146d9eca607a9b15ab9be26890a13311c44f1a32514e830ba78a124720032a4690ee061c5bb9f5701c627863dbb2d8a8b33c78e8f87dd03a7f0ce392624c26653379850232aaa088868cf3ed0a1b4336eea487c151188472edf"),
            d: BigNumberHelper.fromHexString("4ed9864c394fd6ade1ec295a8bec5ce62d4d31da0e9ffd8c16a8c45731659ca650e478523fe7d32c7d0e853c71ca5dccd6429414aa5347f8d8871f24daec2f0bc5e78271fe833c99f6101fd965c5393b76a3c6aaa6f660adae4bf39429f09acfa287fb0421fbf8294ed7231fb37ce5d1ab8aac24a8ddec9a3825916e5fa3ef713860da31ec95f17ead8f6bc49b8fe48ddd35b7f7fc5b92f4cd9e1a93e89f54029e0906a223e6573f1cf588f821529d838a6bdf13212bfc802baf148e34ab0e3fc54d3f564d0e417b15e5f8877c1ecb9fef42720b32f11af47fa4807f974f3303caf2d280d78477a8d37ccf5c8a9d7e575a4279877160de72c6ac5fb4bca1c524")
        }

        const proof: ProofOfZeroOrOne = new ProofOfZeroOrOne(
            "410a63b20ee76a27ffb5d2829b47be20ef6986d07b3e4c6e48fc90440835ad69337dd9e5ca060597e5db65301a1ec9c5c9737190d0c8f1daa1b3919f4d9a49a5335c2f834a9c84ecd400d77a4556386c25d54e8ad5cf019997d481612a4c2eb077fbee23b2a6820693225adfee46f4a92b422ce37300c7ea6eb6d6030bd4586d4a3aeaf1f32fc0a58ced7310e7caf40f8f776f6b8b2684da0a9a85586b9917dd94c5a3ad250fc45d2dbb185bc020706867799ddaa1f5a874761e95035dedacd72de337f80881a233f65a1f1b2ebf2e5ae27232d28b0f816a0e5b49de335ab11c0eb88b5b6930d1dc930ae4f704e432f2b61bc7961e3fe9a5acc0cbe40280d744",
            "e68b581b4d37561636fd3c9ed5201c264ee32ccfbe07f881e09a4a4fd808f1c02a02dbfa98ae9252e3ac62e402fa3fa52ddec1fcf63c6ee2edc587c1a8bb1b7160b5df27e316fc53110278e5b628665057de6f84d54a47918d28d95489fee19cb89540b34b7ecaefa298c554820a8415be6840d13d28625551cc64b7b79f75bd1c5653476046ae3bbe3158bf097ca50af3c5c79017b717d75fe0dcc312aedf50cec7ff72d3e19e332de21fc24861055576483f431e7988c58f0e2adadbbdde7ca7d2425afe62c3187f694f8b799499a160cf28bc1738b45117d112dd59a7666f309ba98b4c6adf765233e18ca1fa29db2ca6a1e8b6714ffa84e069047bafbcf0",
            "a68bc3287242764b621619e681ed3df81eb7c85c1846d4e3327c4cec1963a3ca0dac8abd7df1d50c03ef495ccd26161e9196640220b0a91ce9e5dde3362becce1abde6a6c892a9ebbceb72e41b91efe7c9aff0c115b2e629ec0e7ff7c62d8b672d7dbfea1ee6d2952489de31b8e5827051d405cc10cca8bcaeb6e27d116df56d64c66f500c0a4c5d5b706d7ca10921058309748c7416f7c49235c84c03702c7db2895bbaccde88aad7e75702814b896b5f31cd302ca3262c1b6ec8204aface1ef696b508b3812cfc7f057c925c8c231165eec0fe1cd155fbf9e6c7c20818a45ff40a862c4674239438f3b08a2725ef81e213ec6b7779d96bf7bbab445fd1492e",
            "1f4121ff1eb29c1e6234e6f4767d3bfdcf6f0093bf453443eb6e6b07c3079fd7e479f7d8253457db25f6870b6573b1283f340ac7940cc2a3b12bf4075a69fb878cc4f2abb4ecb6b1442f405958047f76e6a58033aa6ada9fb39b92ffd1232e1d7a39b76cc965574f9bc754c93f75e3677cfbbe79fcffb4e363df1ed8c6c1dc922180654d214f354894325a82866ad64a9d4515fa091706db51a01228692522d51f24c6ffe6a7de9d3106e54eff780704219b5479f89af4d1d0304f082321501304410f13a1f8ac8241744ec0542ae64b97c352a0cf3877f655ab9226f821d355ae5b49666519ea610abbfb710498a4944d92433bbf5824de9c7877bfce172808",
            "80f14231ea91959377a0505ce0c76e3a8559c8ed50d04cfcd8952fadf81f9f36",
            "bee6fb7",
            "772a6bd50d25b876536a64d1a5f637618f9a8b7eaa35b14afe8018f02b4b41b7705f2a20",
            "f3300415"
        );

        // act
        const isValid: boolean = proof.verify(cipher.c, cipher.d, publicKey, p, g);

        // assert
        expect(isValid).toStrictEqual(false);
    });
})