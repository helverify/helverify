<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Helverify.VotingAuthority.Backend</name>
    </assembly>
    <members>
        <member name="T:Helverify.VotingAuthority.Backend.Controllers.BallotPdfController">
            <summary>
            Controller for Ballot PDF handling
            </summary>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.BallotPdfController.#ctor(Helverify.VotingAuthority.Domain.Repository.IRepository{Helverify.VotingAuthority.Domain.Model.Election},Helverify.VotingAuthority.Domain.Repository.IRepository{Helverify.VotingAuthority.Domain.Model.Paper.PaperBallot},Helverify.VotingAuthority.Domain.Service.IBallotPdfService,Helverify.VotingAuthority.Domain.Service.IZipFileService)">
            <summary>
            Constructor
            </summary>
            <param name="electionRepository">Data access to elections</param>
            <param name="ballotRepository">Data access to ballots</param>
            <param name="pdfService">PDF generator</param>
            <param name="zipFileService">ZIP file generator</param>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.BallotPdfController.GenerateAllPdfs(System.String,System.Int32)">
            <summary>
            Generates PDF ballots packed into a ZIP file.
            </summary>
            <param name="electionId">Election identifier</param>
            <param name="numberOfBallots">Number of ballots to be printed</param>
            <returns></returns>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Controllers.BallotsController">
            <summary>
            Controller for handling ballot life-cycle.
            </summary>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.BallotsController.#ctor(Helverify.VotingAuthority.Domain.Repository.IRepository{Helverify.VotingAuthority.Domain.Model.Election},Helverify.VotingAuthority.Domain.Repository.IRepository{Helverify.VotingAuthority.Domain.Model.Paper.PaperBallot},Helverify.VotingAuthority.Domain.Repository.IRepository{Helverify.VotingAuthority.Domain.Model.Blockchain.Blockchain},Helverify.VotingAuthority.Domain.Service.IConsensusNodeService,Helverify.VotingAuthority.Domain.Repository.IElectionContractRepository,Helverify.VotingAuthority.Domain.Repository.IPublishedBallotRepository,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="electionRepository">Provides access to elections stored on the database.</param>
            <param name="ballotRepository">Provides access to plain text ballots stored on the database.</param>
            <param name="publishedBallotRepository"></param>
            <param name="mapper">Automapper</param>
            <param name="consensusNodeService"></param>
            <param name="contractRepository">Provides access to the Election smart contract.</param>
            <param name="bcRepository">Provides access to the blockchain settings</param>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.BallotsController.GetPrint(System.String)">
            <summary>
            Shows the ballot data needed for printing a paper ballot.
            </summary>
            <param name="id">Ballot id</param>
            <returns></returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.BallotsController.GenerateBallots(System.String,Helverify.VotingAuthority.Backend.Dto.BallotGenerationDto)">
            <summary>
            Generates new ballots, stores the encryptions on IPFS, publishes the evidence and the IPFS CIDs on the smart contract,
            and persists the plaintext print ballots onto the database.
            </summary>
            <param name="electionId">Election ID</param>
            <param name="ballotParameters">Contains the ballot generation parameters, such as number of ballots to be created.</param>
            <returns></returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.BallotsController.PublishEvidence(System.String,System.String,Helverify.VotingAuthority.Backend.Dto.EvidenceDto)">
            <summary>
            Publishes the evidence of a casted ballot, consisting of the selected short codes and the ballot to be spoiled.
            </summary>
            <param name="electionId">Election identifier</param>
            <param name="ballotId">Ballot identifier</param>
            <param name="evidenceDto">Evidence parameters</param>
            <returns></returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.BlockchainController.Post(Helverify.VotingAuthority.Backend.Dto.BlockchainDto)">
            <summary>
            Initializes the Proof-of-Authority blockchain using the consensus nodes registered.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.BlockchainController.Get">
            <summary>
            Returns the blockchain instance. Exists only once.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Controllers.ElectionsController">
            <summary>
            Controller for handling the election API
            </summary>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.#ctor(Helverify.VotingAuthority.Domain.Repository.IRepository{Helverify.VotingAuthority.Domain.Model.Election},Helverify.VotingAuthority.Domain.Service.IConsensusNodeService,Helverify.VotingAuthority.Domain.Repository.IElectionContractRepository,Helverify.VotingAuthority.Domain.Repository.IRepository{Helverify.VotingAuthority.Domain.Model.Blockchain.Blockchain},Helverify.VotingAuthority.Domain.Repository.IPublishedBallotRepository,Helverify.VotingAuthority.DataAccess.Ethereum.IWeb3Loader,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="electionRepository">Repository for elections</param>
            <param name="consensusNodeService">Accessor to consensus node service</param>
            <param name="contractRepository">Smart contract accessor</param>
            <param name="bcRepository">Blockchain repository</param>
            <param name="publishedBallotRepository">Accessor to published ballots</param>
            <param name="web3Loader">Web3 instance loader</param>
            <param name="mapper">Automapper</param>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.Post(Helverify.VotingAuthority.Backend.Dto.ElectionDto)">
            <summary>
            Create a new election.
            </summary>
            <param name="electionDto">Election parameters</param>
            <returns>Newly created election</returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.Get(System.String)">
            <summary>
            Provides the election with the specified id.
            </summary>
            <param name="id">Election identifier</param>
            <returns>Election with the specified id.</returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.Get">
            <summary>
            Provides a list of all elections.
            </summary>
            <returns>List of elections</returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.Put(System.String,Helverify.VotingAuthority.Backend.Dto.ElectionDto)">
            <summary>
            Updates a specific election.
            </summary>
            <param name="id">Election identifier</param>
            <param name="electionDto">Election parameters</param>
            <returns>Updated election</returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.Delete(System.String)">
            <summary>
            Removes an election.
            </summary>
            <param name="id">Election identifier</param>
            <returns></returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.Put(System.String)">
            <summary>
            Combines and stores the public keys of all registered consensus nodes of the specified election.
            </summary>
            <param name="id">Election identifier</param>
            <returns>Election public key</returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.DeployContract(System.String)">
            <summary>
            Deploys a smart contract for the specified election.
            </summary>
            <param name="id">Election identifier</param>
            <returns></returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.Decrypt(System.String,Helverify.Cryptography.Encryption.ElGamalCipher)">
            <summary>
            Decrypts a single ciphertext cooperatively
            </summary>
            <param name="id"></param>
            <param name="cipher"></param>
            <returns></returns>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Controllers.ElectionsController.CalculateTally(System.String)">
            <summary>
            Calculates the final tally and publishes the results with evidence.
            </summary>
            <param name="id">Election identifier</param>
            <returns></returns>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Dto.BallotGenerationDto">
            <summary>
            Contains the parameters for ballot generation
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.BallotGenerationDto.NumberOfBallots">
            <summary>
            Number of ballots to be generated at once.
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Dto.BlockchainDto">
            <summary>
            Contains the blockchain parameters for configuration
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.BlockchainDto.Id">
            <summary>
            ID of the blockchain
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.BlockchainDto.Name">
            <summary>
            Caption
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.BlockchainDto.Registrations">
            <summary>
            Registered consensus nodes
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Dto.ElectionDto">
            <summary>
            Represents an Election
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionDto.Id">
            <summary>
            Unique election identifier.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionDto.Name">
            <summary>
            Name of the election.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionDto.Question">
            <summary>
            Voting/election question
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionDto.Options">
            <summary>
            Represents the voting options for this election.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionDto.P">
            <summary>
            Prime p of the ElGamal cryptosystem.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionDto.G">
            <summary>
            Generator g of the ElGamal cryptosystem.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionDto.BlockchainId">
            <summary>
            Blockchain Identifier
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionDto.PublicKey">
            <summary>
            Election public key
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionDto.ContractAddress">
            <summary>
            Address of the smart contract for the election on the Ethereum blockchain.
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Dto.ElectionOptionDto">
            <summary>
            Represents a single option in an election or vote.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.ElectionOptionDto.Name">
            <summary>
            Candidate/Option name
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Dto.EvidenceDto">
            <summary>
            Parameters for publishing voting evidence.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.EvidenceDto.SelectedOptions">
            <summary>
            Contains the selected options of a ballot.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.EvidenceDto.SpoiltBallotIndex">
            <summary>
            Column to be spoiled (0 or 1)
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Dto.PrintBallotDto">
            <summary>
            Contains the data needed for printing a ballot on paper.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.PrintBallotDto.BallotId">
            <summary>
            Ballot identifier
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.PrintBallotDto.Options">
            <summary>
            Selectable election options / candidates.
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Dto.PrintOptionDto">
            <summary>
            Represents one selectable option / candidate
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.PrintOptionDto.Name">
            <summary>
            Name of the option / candidate
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.PrintOptionDto.ShortCode1">
            <summary>
            First short code (from first virtual ballot)
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.PrintOptionDto.ShortCode2">
            <summary>
            Second short code (from second virtual ballot)
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Dto.RegistrationDto">
            <summary>
            Represents a registered consensus node.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.RegistrationDto.Name">
            <summary>
            Name of the consensus node.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.RegistrationDto.Endpoint">
            <summary>
            API Endpoint for calling the consensus node.
            </summary>
        </member>
        <member name="P:Helverify.VotingAuthority.Backend.Dto.RegistrationDto.PublicKeys">
            <summary>
            Public key of the consensus node.
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Mapping.BalloDtoProfile">
            <summary>
            Mapping profile for Ballots
            </summary>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Mapping.BalloDtoProfile.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Mapping.BlockchainDtoProfile">
            <summary>
            Mapping profile for Blockchain configuration
            </summary>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Mapping.BlockchainDtoProfile.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Mapping.ElectionDtoProfile">
            <summary>
            Mapping profile for ElectionDto
            </summary>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Mapping.ElectionDtoProfile.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Helverify.VotingAuthority.Backend.Mapping.RegistrationDtoProfile">
            <summary>
            Mapping profile for RegistrationDto.
            </summary>
        </member>
        <member name="M:Helverify.VotingAuthority.Backend.Mapping.RegistrationDtoProfile.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
    </members>
</doc>
